<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Continents', 'doctrine');

/**
 * BaseContinents
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id
 * @property string $name
 * @property string $recordname
 * @property integer $latitude
 * @property integer $longitude
 * @property integer $zoom
 * 
 * @method string     getId()         Returns the current record's "id" value
 * @method string     getName()       Returns the current record's "name" value
 * @method string     getRecordname() Returns the current record's "recordname" value
 * @method integer    getLatitude()   Returns the current record's "latitude" value
 * @method integer    getLongitude()  Returns the current record's "longitude" value
 * @method integer    getZoom()       Returns the current record's "zoom" value
 * @method Continents setId()         Sets the current record's "id" value
 * @method Continents setName()       Sets the current record's "name" value
 * @method Continents setRecordname() Sets the current record's "recordname" value
 * @method Continents setLatitude()   Sets the current record's "latitude" value
 * @method Continents setLongitude()  Sets the current record's "longitude" value
 * @method Continents setZoom()       Sets the current record's "zoom" value
 * 
 * @package    iwca
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContinents extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('Continents');
        $this->hasColumn('id', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('recordname', 'string', 3, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('latitude', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('longitude', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('zoom', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}