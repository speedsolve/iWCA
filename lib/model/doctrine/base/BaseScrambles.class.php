<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Scrambles', 'doctrine');

/**
 * BaseScrambles
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $scrambleid
 * @property string $competitionid
 * @property string $eventid
 * @property string $roundid
 * @property string $groupid
 * @property integer $isextra
 * @property integer $scramblenum
 * @property string $scramble
 * @property integer $id
 * 
 * @method integer   getScrambleid()    Returns the current record's "scrambleid" value
 * @method string    getCompetitionid() Returns the current record's "competitionid" value
 * @method string    getEventid()       Returns the current record's "eventid" value
 * @method string    getRoundid()       Returns the current record's "roundid" value
 * @method string    getGroupid()       Returns the current record's "groupid" value
 * @method integer   getIsextra()       Returns the current record's "isextra" value
 * @method integer   getScramblenum()   Returns the current record's "scramblenum" value
 * @method string    getScramble()      Returns the current record's "scramble" value
 * @method integer   getId()            Returns the current record's "id" value
 * @method Scrambles setScrambleid()    Sets the current record's "scrambleid" value
 * @method Scrambles setCompetitionid() Sets the current record's "competitionid" value
 * @method Scrambles setEventid()       Sets the current record's "eventid" value
 * @method Scrambles setRoundid()       Sets the current record's "roundid" value
 * @method Scrambles setGroupid()       Sets the current record's "groupid" value
 * @method Scrambles setIsextra()       Sets the current record's "isextra" value
 * @method Scrambles setScramblenum()   Sets the current record's "scramblenum" value
 * @method Scrambles setScramble()      Sets the current record's "scramble" value
 * @method Scrambles setId()            Sets the current record's "id" value
 * 
 * @package    iwca
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseScrambles extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('Scrambles');
        $this->hasColumn('scrambleid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('competitionid', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 32,
             ));
        $this->hasColumn('eventid', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('roundid', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('groupid', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('isextra', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('scramblenum', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('scramble', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}